#!/bin/bash

#
#                               [=========]
#                    -==++""" .  /. . .  \ .  """++==-
#             -+""   \   .. . .  | ..  . |  . .  .   /   ""+-
#          /\  +-""   `-----=====\    /=====-----'   ""-+  /\
#         / /                      ""=""                      \ \
#       / /                                                     \ \
#      //                            |                            \\
#     /")                          \ | /                          ("\
#     \o\                           \*/                           /o/
#      \ )                       --**O**--                       ( /
#                                   /*\
#                                  / | \
#                                    |
#
# Takes care of the execution of applications and their dependencies under
# umedia environment.

# getting current script folder
dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# prepending ulauncher module to the python path
ulauncherLib="$dir/lib"
if [ -z "$PYTHONPATH" ]; then
  export PYTHONPATH="$ulauncherLib"
else
  export PYTHONPATH="$ulauncherLib:$PYTHONPATH"
fi

# making sure $ULAUNCHER_CONFIG_DIR is defined properly
if ! [ -d "$ULAUNCHER_CONFIG_DIR" ]; then
  echo "ulauncher error: Could not find directory defined by \$ULAUNCHER_CONFIG_DIR" >&2
fi

# avoiding to prepended to the system path for every single bash session by making
# sure bin is not included to the path yet.
ulauncherBinPath="$dir/bin:$dir/wrappers/$UCORE_OS:$dir/wrappers/$UCORE_OS/$UCORE_OS_VERSION"
if ! [ "$ULAUNCHER_BIN_PATH" == "$ulauncherBinPath" ]; then

  export ULAUNCHER_BIN_PATH=$ulauncherBinPath
  export PATH="$ULAUNCHER_BIN_PATH:$PATH"

  # setting global environment variables
  ulauncherGlobalEnvPath="$ULAUNCHER_CONFIG_DIR/env/init.json"
  if [ -f "$ulauncherGlobalEnvPath" ]; then
    while IFS='=' read -r name value || [[ -n "$name" ]];
    do
      # convention followed by <ENV_NAME>=<ENV_VALUE>
      export "$name"=$value
    done < <(tweakenv "$ulauncherGlobalEnvPath")
  fi

  # rez support (if available for the platform)
  if [ -d "$REZ_LOCATION" ]; then
    # sourcing auto-completion
    source "$REZ_LOCATION/completion/complete.sh"
  fi
fi
